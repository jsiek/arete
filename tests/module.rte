module M
  exports empty, push, front, rest, map
{
  const all = 1;
  let empty = ⟨⟩;
  fun push(let data, let rest) {
    return ⟨data, rest⟩;
  }
  fun front(let ls) { return ls[0]; }
  fun rest(let ls) { return ls[1]; }
  
  fun map(let f, let ls) {
    if (ls == ⟨⟩) {
      return ⟨⟩;
    } else {
      return ⟨f(front(ls)), map(f, rest(ls))⟩;
    }
  }
}

from M import empty, push, front, rest;

fun main() {
  let ls1 = push(0, push(1, push(2, empty)));
  let inc = fun (x) { return x + 1; };
  let ls2 = M::map(inc, ls1); // test :: operator
  let three = front(rest(rest(ls2)));
  return three - 3;
}

type opt_ptr = variant ptr: ?* | nul: ⟨⟩;

fun null() -> opt_ptr { return tag nul(⟨⟩) as opt_ptr; }
fun is_null(let p : opt_ptr) {
  match (p) {
    case nul(t):
      return true;
    case ptr(q):
      return false;
  }
}
fun ptr(var p : int*) -> opt_ptr { return tag ptr(p) as opt_ptr; }

fun deref(x : opt_ptr, default: int) -> int {
  match (x) {
    case nul(t):
      return default;
    case ptr(p):
      return *p;
  }
}

fun main() {
  var x : opt_ptr = null();
  var y : opt_ptr = ptr(&42);
  if (is_null(x)) {
    return deref(x, -42) + deref(y, -42);
  } else {
    return 1;
  }
}